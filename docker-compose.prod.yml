version: '3.10'

volumes:
  postgres_data:
  kan_db_backups:

services:
  api:
    container_name: kan_api
    restart: always
    build:
      context: .
    command:
          sh -c "python manage.py wait_for_db &&
                 python manage.py migrate &&
                 python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/kan
    ports:
      - "8000:8000"
    env_file:
      - envs/env_prod
    depends_on:
      - db
      - redis
  db:
    container_name: kan_db
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ${HOME}/postgres_data:/var/lib/postgresql/data/
    env_file:
      - envs/env_prod
  redis:
    container_name: kan_redis
    image: redis:7.2.2-alpine
  celery:
    container_name: kan_celery
    build: .
    command: celery -A kanban worker -l info
    volumes:
      - .:/kan
    env_file:
      - envs/env_prod
    depends_on:
      - redis
  celery-beat:
    container_name: kan_celery_beat
    build: .
    command: celery -A kanban beat -l info
    volumes:
      - .:/kan
    env_file:
      - envs/env_prod
    depends_on:
      - redis
  pgbackups:
    container_name: kan_backup
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ${HOME}/kan_db_backups:/backups
    links:
      - db:db
    depends_on:
      - db
    env_file:
      - envs/env_prod
    environment:
      - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
      - SCHEDULE=@daily
#      - SCHEDULE=@every 1h00m00s
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=81
