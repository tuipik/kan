version: '3.10'

volumes:
  postgres_data_dev:
  kan_db_backups_dev:

services:
  api_dev:
    container_name: kan_api_dev
    restart: always
    build:
      context: .
    command:
          sh -c "python manage.py wait_for_db &&
                 python manage.py migrate &&
                 python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/kan
    ports:
      - "8000:8000"
    env_file:
      - envs/env_dev
    depends_on:
      - db_dev
      - redis_dev

  db_dev:
    container_name: kan_db_dev
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ${HOME}/postgres_data_dev:/var/lib/postgresql/data/
    env_file:
      - envs/env_dev

  redis_dev:
    container_name: kan_redis_dev
    image: redis:7.2.2-alpine

  celery_dev:
    container_name: kan_celery_dev
    build: .
    command: celery -A kanban worker -l info
    volumes:
      - .:/kan
    env_file:
      - envs/env_dev
    depends_on:
      - redis_dev

  celery-beat_dev:
    container_name: kan_celery_beat_dev
    build: .
    command: celery -A kanban beat -l info
    volumes:
      - .:/kan
    env_file:
      - envs/env_dev
    depends_on:
      - redis_dev

  pgbackups_dev:
    container_name: kan_backup_dev
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ${HOME}/kan_db_backups_dev:/backups
    links:
      - db_dev:db_dev
    depends_on:
      - db_dev
    env_file:
      - envs/env_dev
    environment:
      - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
      - SCHEDULE=@daily
#      - SCHEDULE=@every 1h00m00s
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=81
